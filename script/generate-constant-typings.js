// This script will read constants from `.js` files and generate `.d.ts` files.

var fs = require('fs')
var path = require('path')

function generateTyping(name, paths) {
  var constants = require('../' + paths.join('/'))

  var literalType = Object.values(constants)
    .map((value) => JSON.stringify(value))
    .join(' | ')
  var interfaceType = JSON.stringify(constants)

  // Special logic for "Type" since we want to have types extendable btw, e.g., micromark-extension-gfm adds other types.
  if (name === 'Type') {
    literalType = 'string'
  }

  // Special logic for "Code" since a `Code` value can be any unicode character.
  if (name === 'Code') {
    literalType = 'null | number'
  }

  fs.writeFileSync(
    path.join(...paths) + '.d.ts',
    [
      '// This module is generated by `script/`.',
      '',
      `export type ${name} = ${literalType}`,
      '',
      '// @for-script: REMOVE_ALL_THING_BELOW',
      '',
      `export interface ${name}s ${interfaceType}`,
      '',
      `declare const value: ${name}s`,
      '',
      `export default value`,
      ''
    ].join('\n')
  )
}

generateTyping('Code', ['lib', 'character', 'codes'])
generateTyping('Value', ['lib', 'character', 'values'])
generateTyping('Type', ['lib', 'constant', 'types'])
generateTyping('Constant', ['lib', 'constant', 'constants'])
